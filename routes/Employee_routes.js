const express = require("express")
const {CreateEmployeeDetails,viewEmployeeDetails,deleteEmployeeDetails,updateEmployeeDetails} = require("../controller/Employee_controller")
const router = express.Router()
/**
 * @swagger
 * components:
 *   schemas:
 *     Employee:
 *       type: object
 *       required:
 *         - EmployeeId
 *         - FirstName
 *         - MiddleName
 *         - LastName
 *         - MaidenName
 *         - Caste
 *         - Religion
 *         - IdentificationMark
 *         - DateofBirth
 *         - BirthPlace
 *         - Gender
 *         - Nationality
 *         - MotherTongue
 *         - BloodGroup
 *         - Ethnicity
 *         - Height
 *         - Weight
 *         - MaritalStatus
 *         - MarriageAnniversaryDate
 *         - AddNewSkill
 *         - Describeyourselfinfewwords
 *       properties:
 *         EmployeeId:
 *           type: integer
 *           description: EmployeeId
 *         FirstName:
 *           type: string
 *           description: FirstName
 *         LastName:
 *           type: string
 *           description: LastName
 *         MiddleName:
 *           type: string
 *           description: EmployeeId
 *         MaidenName:
 *           type: string
 *           description: MaidenName
 *         Caste:
 *           type: string
 *           description: EmployeeId
 *         Religion:
 *           type: string
 *           description: Religion
 *         IdentificationMark:
 *           type: string
 *           description: IdentificationMark
 *         DateofBirth:
 *           type: string
 *           description: IdentificationMark
 *         BirthPlace:
 *           type: string
 *           description: BirthPlace
 *         Gender:
 *           type: string
 *           description: Gender
 *         Nationality:
 *           type: string
 *           description: Gender
 *         MotherTongue:
 *           type: string
 *           description: Gender
 *         BloodGroup:
 *           type: string
 *           description: Gender
 *         Ethnicity:
 *           type: string
 *           description: Gender
 *         Height:
 *           type: string
 *           description: Gender
 *         Weight:
 *           type: string
 *           description: Weight
 *         MaritalStatus:
 *           type: string
 *           description: MaritalStatus
 *         MarriageAnniversaryDate:
 *           type: string
 *           description: MarriageAnniversaryDate
 *         AddNewSkill:
 *           type: string
 *           description: MarriageAnniversaryDate
 *         Describeyourselfinfewwords:
 *           type: string
 *           description: MarriageAnniversaryDate
 *       example:
 *         EmployeeId: autoGenerated
 *         FirstName: jhon
 *         MiddleName: Tom
 *         LastName: Deo
 *         MaidenName: TomJerry
 *         Caste: Maratha
 *         Religion: Hindu
 *         IdentificationMark: nomark
 *         DateofBirth: 03-10-2000
 *         BirthPlace: pune
 *         Gender: Male
 *         Nationality: Indian
 *         MotherTongue: Marathi
 *         BloodGroup: O+
 *         Ethnicity: Dhoti-Kurta
 *         Height: 5.4
 *         Weight: 55
 *         MaritalStatus: Single
 *         MarriageAnniversaryDate: NoN
 *         AddNewSkill: HTML
 *         Describeyourselfinfewwords: Active
 *         
 *        
 *
 */

/**
 * @swagger
 * /api/v1/viewEmployeeDetails:
 *   get:
 *     summary: get all Employee
 *     tags: [Employee]
 *     responses:
 *       200:
 *         description: get All Employee
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               items:
 *                 $ref: '#/components/schemas/Employee'
 */
router.route("/viewEmployeeDetails").get(viewEmployeeDetails)


/**
 * @swagger
 * /api/v1/CreateEmployeeDetails:
 *   post:
 *     summary: add a new Employee
 *     tags: [Employee]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/Employee'
 *     responses:
 *       200:
 *         description: create Employee successfull
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Employee'
 *       500:
 *         description: Some server error
 */
 router.route("/CreateEmployeeDetails").post(CreateEmployeeDetails)

  /**
 * @swagger
 * /api/v1/deleteEmployeeDetails/{EmployeeId}:
 *   delete:
 *     summary: Delete an Employee
 *     tags: [Employee]
 *     parameters:
 *         - in: path
 *           FirstName: EmployeeId
 *           required: true
 *           description: EmployeeId is required
 *           schema:
 *              type: string
 *     responses:
 *       200:
 *         description: Employee delete successfully
 *   
 */
router.route("/deleteEmployeeDetails/:EmployeeId").delete(deleteEmployeeDetails)

/**
* @swagger
* /api/v1/updateEmployeeDetails:
*   post:
*     summary: upLastName Employee Details
*     tags: [Employee]
*     requestBody:
*       required: true
*       content:
*         application/json:
*           schema:
*             $ref: '#/components/schemas/Employee'
*     responses:
*       200:
*         description: update Employee Details successfull
*         content:
*           application/json:
*             schema:
*               $ref: '#/components/schemas/Employee'
*       500:
*         description: Some server error
*/
router.route("/updateEmployeeDetails").post(updateEmployeeDetails)
module.exports = router

