const express = require("express")
const {CreateContactPersonDetails,viewContactPersonDetails,deleteContactPersonDetails,updateContactPersonDetails,getSingleContactPersonDetails,deleteContactPersonDetailsbysourceId,getContactDetailBySourceId} = require("../controller/ContactPerson_controller")
const router = express.Router()
/**
 * @swagger
 * components:
 *   schemas:
 *     ContactPerson:
 *       type: object
 *       required:
 *         - ContactPersonId
 *         - ContactPersonName
 *         - Designation
 *         - Email
 *         - MobileNo
 *         - LandlineNo
 *         - Countrycode
 *         - sourceId
 
 *       properties:
 *         ContactPersonId:
 *           type: integer
 *           description: Autogeneration
 *         ContactPersonName:
 *           type: string
 *           description: ContactPersonName
 *         Designation:
 *           type: string
 *           description: Designation
 *         Email:
 *           type: string
 *           description: Email
 *         MobileNo:
 *           type: string
 *           description: MobileNo
 *         LandlineNo:
 *           type: string
 *           description: LandlineNo
 *         Countrycode:
 *           type: string
 *           description: LandlineNo
 *         sourceId:
 *           type: string
 *           description: LandlineNo
 *       example:
 *         ContactPersonId: autoGenerated
 *         ContactPersonName: 0817441009
 *         Designation: Contractor
 *         Email: contact@cont.in
 *         MobileNo: 9874561230
 *         Countrycode: IN
 *         LandlineNo: 9874561230
 *         sourceId: 987450
 */

/**
 * @swagger
 * /api/v1/viewContactPersonDetails:
 *   get:
 *     summary: get all ContactPerson
 *     tags: [ContactPerson]
 *     responses:
 *       200:
 *         description: get All ContactPerson
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               items:
 *                 $ref: '#/components/schemas/ContactPerson'
 */
router.route("/viewContactPersonDetails").get(viewContactPersonDetails)


/**
 * @swagger
 * /api/v1/CreateContactPersonDetails:
 *   post:
 *     summary: add a new ContactPerson
 *     tags: [ContactPerson]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ContactPerson'
 *     responses:
 *       200:
 *         description: create ContactPerson successfull
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ContactPerson'
 *       500:
 *         description: Some server error
 */
 router.route("/CreateContactPersonDetails").post(CreateContactPersonDetails)

  /**
 * @swagger
 * /api/v1/deleteContactPersonDetails/{ContactPersonId}:
 *   delete:
 *     summary: Delete an ContactPerson
 *     tags: [ContactPerson]
 *     parameters:
 *         - in: path
 *           ContactPersonName: ContactPersonId
 *           required: true
 *           description: ContactPersonId is required
 *           schema:
 *              type: string
 *     responses:
 *       200:
 *         description: ContactPerson delete successfully
 *   
 */
router.route("/deleteContactPersonDetails/:ContactPersonId").delete(deleteContactPersonDetails)

/**
* @swagger
* /api/v1/updateContactPersonDetails:
*   post:
*     summary: upAddress ContactPerson Details
*     tags: [ContactPerson]
*     requestBody:
*       required: true
*       content:
*         application/json:
*           schema:
*             $ref: '#/components/schemas/ContactPerson'
*     responses:
*       200:
*         description: upAddress ContactPerson Details successfull
*         content:
*           application/json:
*             schema:
*               $ref: '#/components/schemas/ContactPerson'
*       500:
*         description: Some server error
*/
router.route("/updateContactPersonDetails").post(updateContactPersonDetails)

/**
 * @swagger
 * /api/v1/getSingleContactPersonDetails/{ContactPersonId}:
 *   get:
 *     summary: Get a ContactPerson by ID
 *     tags: [ContactPerson]
 *     description: Retrieve a ContactPerson by their unique ID.
 *     parameters:
 *       - in: path
 *         name: ContactPersonId
 *         required: true
 *         description: ID of the ContactPerson to retrieve
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Successfully retrieved the ContactPerson
 *       404:
 *         description: ContactPerson not found
 */
router.route("/getSingleContactPersonDetails/:ContactPersonId").get(getSingleContactPersonDetails)

 /**
 * @swagger
 * /api/v1/deleteContactPersonDetailsbysourceId/{sourceId}:
 *   delete:
 *     summary: Delete a Contact Person
 *     tags: [ContactPerson]
 *     parameters:
 *         - in: path
 *           name: sourceId
 *           required: true
 *           description: sourceId is required
 *           schema:
 *              type: string
 *     responses:
 *       200:
 *         description: sourceId delete successfully
 */

 router.route("/deleteContactPersonDetailsbysourceId/:sourceId").delete(deleteContactPersonDetailsbysourceId)

 /**
 * @swagger
 * /api/v1/getContactDetailBysourceId/{sourceId}:
 *   get:
 *     summary: Get a ContactPerson by ID
 *     tags: [ContactPerson]
 *     description: Retrieve a ContactPerson by their unique ID.
 *     parameters:
 *       - in: path
 *         name: sourceId
 *         required: true
 *         description: ID of the ContactPerson to retrieve
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Successfully retrieved the ContactPerson
 *       404:
 *         description: ContactPerson not found
 */

router.route("/getContactDetailBySourceId/:sourceId").get(getContactDetailBySourceId)
  
module.exports = router


  