const express = require("express")
const {CreatePurchaseEstimationEnquiryDetails,viewPurchaseEstimationEnquiryDetails,deletePurchaseEstimationEnquiryDetails,updatePurchaseEstimationEnquiryDetails,getSinglePurchaseEstimationEnquiryDetails} = require("../controller/PurchaseEstimationEnquiry_controller")
const router = express.Router()
/**
 * @swagger
 * components:
 *   schemas:
 *     PurchaseEstimationEnquiry:
 *       type: object
 *       required:
 *         - PurchaseEstimationEnquiryId
 *         - SalesEnquiryId
 *         - EnquiryDate
 *         - CustomerId
 *         - EnquiryOwnerId
 *         - OfferingTypeId
 *         - EnquiryTypeId
 *         - EquipmentId
 *         - TypeOfEquipmentId
 *         - EnquiryDescription
 *         - EnquiryStatusId
 *         - Remark
 *         - AddtionalComments
 *         - TargetDate
 *         - InstallationType
 *         - CostEstimationStatus
 *       properties:
 *         PurchaseEstimationEnquiryId:
 *           type: integer
 *           description: PurchaseEstimationEnquiryId
 *         SalesEnquiryId:
 *           type: string
 *           description: SalesEnquiryId
 *         CustomerId:
 *           type: string
 *           description: CustomerId
 *         EnquiryDate:
 *           type: string
 *           description: PurchaseEstimationEnquiryId
 *         EnquiryOwnerId:
 *           type: string
 *           description: PurchaseEstimationEnquiryId
 *         OfferingTypeId:
 *           type: string
 *           description: PurchaseEstimationEnquiryId
 *         EnquiryTypeId:
 *           type: string
 *           description: EnquiryTypeId
 *         EquipmentId:
 *           type: string
 *           description: EquipmentId
 *         TypeOfEquipmentId:
 *           type: string
 *           description: EquipmentId
 *         EnquiryDescription:
 *           type: string
 *           description: EquipmentId
 *         EnquiryStatusId:
 *           type: string
 *           description: EquipmentId
 *         Remark:
 *           type: string
 *           description: Remark
 *         AddtionalComments:
 *           type: string
 *           description: AddtionalComments
 *         TargetDate:
 *           type: string
 *           description: AddtionalComments
 *         InstallationType:
 *           type: string
 *           description: AddtionalComments
 *         CostEstimationStatus:
 *           type: string
 *           description: CostEstimationStatus
 *       example:
 *         PurchaseEstimationEnquiryId: autoGenerated
 *         SalesEnquiryId: EA00-1000
 *         EnquiryDate: 11-10-2023
 *         CustomerId: CD1010001
 *         EnquiryOwnerId: ED101
 *         OfferingTypeId: 1
 *         EnquiryTypeId: 1
 *         EquipmentId: 1
 *         TypeOfEquipmentId: 1
 *         EnquiryDescription: hvjjdfdfgj
 *         EnquiryStatusId: 1
 *         Remark: Active
 *         AddtionalComments: jggdffgd
 *         TargetDate: 11-12-2023
 *         InstallationType: Dummy
 *         CostEstimationStatus: Active
 *         
 *        
 *
 */

/**
 * @swagger
 * /api/v1/viewPurchaseEstimationEnquiryDetails:
 *   get:
 *     summary: get all PurchaseEstimationEnquiry
 *     tags: [PurchaseEstimationEnquiry]
 *     responses:
 *       200:
 *         description: get All PurchaseEstimationEnquiry
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               items:
 *                 $ref: '#/components/schemas/PurchaseEstimationEnquiry'
 */
router.route("/viewPurchaseEstimationEnquiryDetails").get(viewPurchaseEstimationEnquiryDetails)


/**
 * @swagger
 * /api/v1/CreatePurchaseEstimationEnquiryDetails:
 *   post:
 *     summary: add a new PurchaseEstimationEnquiry
 *     tags: [PurchaseEstimationEnquiry]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/PurchaseEstimationEnquiry'
 *     responses:
 *       200:
 *         description: create PurchaseEstimationEnquiry successfull
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/PurchaseEstimationEnquiry'
 *       500:
 *         description: Some server error
 */
 router.route("/CreatePurchaseEstimationEnquiryDetails").post(CreatePurchaseEstimationEnquiryDetails)

  /**
 * @swagger
 * /api/v1/deletePurchaseEstimationEnquiryDetails/{PurchaseEstimationEnquiryId}:
 *   delete:
 *     summary: Delete an PurchaseEstimationEnquiry
 *     tags: [PurchaseEstimationEnquiry]
 *     parameters:
 *         - in: path
 *           SalesEnquiryId: PurchaseEstimationEnquiryId
 *           required: true
 *           description: PurchaseEstimationEnquiryId is required
 *           schema:
 *              type: string
 *     responses:
 *       200:
 *         description: PurchaseEstimationEnquiry delete successfully
 *   
 */
router.route("/deletePurchaseEstimationEnquiryDetails/:PurchaseEstimationEnquiryId").delete(deletePurchaseEstimationEnquiryDetails)

/**
* @swagger
* /api/v1/updatePurchaseEstimationEnquiryDetails:
*   post:
*     summary: upCustomerId PurchaseEstimationEnquiry Details
*     tags: [PurchaseEstimationEnquiry]
*     requestBody:
*       required: true
*       content:
*         application/json:
*           schema:
*             $ref: '#/components/schemas/PurchaseEstimationEnquiry'
*     responses:
*       200:
*         description: update PurchaseEstimationEnquiry Details successfull
*         content:
*           application/json:
*             schema:
*               $ref: '#/components/schemas/PurchaseEstimationEnquiry'
*       500:
*         description: Some server error
*/
router.route("/updatePurchaseEstimationEnquiryDetails").post(updatePurchaseEstimationEnquiryDetails)

// swagger.js
/**
 * @swagger
 * components:
 *   schemas:
 *     PurchaseEnquiry:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *     PurchaseEnquiryResponse:
 *       type: object
 *       properties:
 *         result:
 *           type: string
 *         details:
 *           type: string
 */

/**
 * @swagger
 * /api/v1/getSinglePurchaseEstimationEnquiryDetails:
 *   post:
 *     summary: Get purchase enquiry estimation by ID
 *     tags: [PurchaseEstimationEnquiry]
 *     description: Retrieve purchase enquiry estimation based on an ID passed in the request body.
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/PurchaseEnquiry'
 *     responses:
 *       200:
 *         description: Purchase enquiry estimation
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/PurchaseEnquiryResponse'
 *       404:
 *         description: Purchase enquiry not found
 */
router.route("/getSinglePurchaseEstimationEnquiryDetails").post(getSinglePurchaseEstimationEnquiryDetails)

module.exports = router

